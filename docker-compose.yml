version: "3"
services:
  mongo:
    image: mongo
    volumes: 
      - vol-mongobase:/data/db
    restart: always
    ports:
      - "27017"
    env_file: 
    - mongo.env
    networks:
      - net-backend

  mongo-express:
    image: mongo-express
    restart: always
    depends_on: 
      - mongo
    ports:
      - "8081"
    env_file: 
      - mongoexp.env
    networks: 
      - net-backend
      - traefik-net

  node-web-app:
    image: registry.labbs.com.br/andrelsa/node-web-app:0.0.1-SNAPSHOT 
    ports:
      - "8080"
    depends_on: 
      - mongo
    env_file: .env
    networks: 
      - net-backend
      - traefik-net

  prometheus:
    image: registry.labbs.com.br/andrelsa/prometheus
    ports:
      - "9090"
    environment:
      - SCRAPE_INTERVAL=15s
      - SCRAPE_TIMEOUT=10s
      - STATIC_SCRAPE_TARGETS=mynodeapp@node-web-app:8080/metrics
    networks: 
      - traefik-net

  grafana:
    image: registry.labbs.com.br/andrelsa/nodejs-grafana:0.0.1-SNAPSHOT
    volumes:
      - vol-nodegrafana:/var/lib/grafana
    ports:
      - "3000"
    networks: 
      - traefik-net

  nginxproxy:
    image: registry.labbs.com.br/andrelsa/nginx-proxy
    environment: 
      - PROXY_DESTINATION_1=80|/|http|node-web-app|8080
      - PROXY_DESTINATION_2=3000|/|http|grafana|3000
      - PROXY_DESTINATION_3=9090|/|http|prometheus|9090
      - PROXY_DESTINATION_4=8081|/|http|mongo-express|8081

    depends_on:
      - prometheus
      - node-web-app
      - grafana
    ports:
      - "80:80"
      - "3000:3000"
      - "9090:9090"
      - "8081:8081"
    networks: 
      - traefik-net
    deploy:
      labels:
         - traefik.docker.network=traefik-net
         - traefik.frontend.rule=Host:andrelsa-app1.labbs.com.br
         - traefik.port=80
         - traefik.frontend.entryPoints=internal_http,internal_https,external_http,external_https


networks:
  net-backend:
    driver: overlay
  traefik-net:
    external:
      name: traefik-net 


volumes:
  vol-nodegrafana:
  vol-mongobase: 